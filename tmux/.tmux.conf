# Set prefix to CtrL-q
set -g prefix C-q

# Free original Ctrl-b prefix keybinding
unbind C-b

# True color support
# set -g default-terminal "screen-256color"
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",alacritty:RGB"

set -g mouse on
set -g focus-events on
set -g base-index 1
setw -g pane-base-index 1

setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'primary'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'Morantron/tmux-fingers'
# set -g @plugin 'egel/tmux-gruvbox'
set -g @plugin 'catppuccin/tmux'

# Initialize TMUX plugin manager
run -b '~/.tmux/plugins/tpm/tpm'

set -g @catppuccin_window_tabs_enabled on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# if-shell '[ -f /.dockerenv ]' \
#   "is_vim=\"ps -o state=,comm= -t '#{pane_tty}' \
#       | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'\""
  # Filter out docker instances of nvim from the host system to prevent
  # host from thinking nvim is running in a pseudoterminal when its not.
  # "is_vim=\"ps -o state=,comm=,cgroup= -t '#{pane_tty}' \
  #     | grep -ivE '^.+ +.+ +.+\\/docker\\/.+$' \
  #     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)? +'\""

bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n M-\\ if-shell "$is_vim" "send-keys M-\\\\" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-\\ select-pane -l
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "send-keys -R ; send-keys C-l ; clear-history"

bind C-s setw synchronize-panes
