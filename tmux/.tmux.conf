# Free original Ctrl-b prefix keybinding
unbind C-b

# Set prefix to CtrL-q
set -g prefix C-q
bind-key C-q send-prefix

set -s set-clipboard on # osc52 sequence support

# True color support
# set -g default-terminal "screen-256color"
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",alacritty:RGB"
set-option -ga terminal-overrides ",xterm-256color:RGB"

set -s extended-keys on
set -as terminal-features 'xterm*:extkeys'
# set -ga terminal-features "*:hyperlinks"

set -g mouse on
set -g focus-events on
set -g base-index 1
setw -g pane-base-index 1

setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'primary'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'Morantron/tmux-fingers'
# set -g @plugin 'egel/tmux-gruvbox'
set -g @plugin 'catppuccin/tmux'

# Initialize TMUX plugin manager
run -b '~/.tmux/plugins/tpm/tpm'

# catppuccin
# set -g @catppuccin_window_left_separator "█"
# set -g @catppuccin_window_right_separator "█ "
# set -g @catppuccin_window_number_position "left"
# set -g @catppuccin_window_middle_separator "█ "
set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_right_separator "█"
set -g @catppuccin_window_number_position "left"
set -g @catppuccin_window_middle_separator ""

set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W"

set -g @catppuccin_status_modules "directory date_time session host"
# set -g @catppuccin_status_left_separator ""
# set -g @catppuccin_status_right_separator ""
# set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_left_separator "█"
set -g @catppuccin_status_right_separator "█"
set -g @catppuccin_status_connect_separator "yes"

set -g @catppuccin_directory_text "#{b:pane_current_path}"


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# if-shell '[ -f /.dockerenv ]' \
#   "is_vim=\"ps -o state=,comm= -t '#{pane_tty}' \
#       | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'\""
  # Filter out docker instances of nvim from the host system to prevent
  # host from thinking nvim is running in a pseudoterminal when its not.
  # "is_vim=\"ps -o state=,comm=,cgroup= -t '#{pane_tty}' \
  #     | grep -ivE '^.+ +.+ +.+\\/docker\\/.+$' \
  #     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)? +'\""

bind-key -n C-h if-shell "$is_vim" { send-keys C-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n C-j if-shell "$is_vim" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n C-k if-shell "$is_vim" { send-keys C-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n C-l if-shell "$is_vim" { send-keys C-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\\\" "select-pane -l"
bind-key -T copy-mode-vi C-h if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi C-j if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi C-k if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi C-l if-shell -F '#{pane_at_right}'  {} { select-pane -R }
bind-key -T copy-mode-vi C-\\ select-pane -l
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "send-keys -R ; send-keys C-l ; clear-history"

# when in tmux, nvim requests csi u but zsh doesn't, so forwarding the sequence here to make it work for zsh, this sequence is mapped in zsh to clear screen
# no longer needed, use tmux `clear-history` and send <C-l> instead
# bind-key -n C-S-l "send-keys Escape '[76;6u'"

is_ssh="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?ssh$'"

bind-key -n C-S-l if-shell "$is_vim || $is_ssh" {
    send-keys
  } {
    clear-history
    send-keys -R C-l
  }

# bind-key -n C-p 'display "testing"'

bind C-s setw synchronize-panes
